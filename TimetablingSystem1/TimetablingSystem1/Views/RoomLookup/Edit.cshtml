@model TimetablingSystem1.Models.RoomLookupModel
@using System.Web.Optimization;
@using System.Web.Mvc.Html;

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.roomsEdit.RoomID)
    <fieldset>
        <legend>Room</legend>

        @Html.HiddenFor(model => model.roomsEdit.RoomID)

        <div class="editor-label">
            @Html.LabelFor(model => model.roomsEdit.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.roomsEdit.Name)
            @Html.ValidationMessageFor(model => model.roomsEdit.Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.roomsEdit.RoomType)
        </div>
        <div class="editor-fieldType">
            
            @if (Model.roomsEdit.RoomType == "L") { 
                <span>Lecture</span>
               @Html.RadioButtonFor(model => model.roomsEdit.RoomType, "L", new {@checked = "checked"}) 
            
                <span>Seminar</span>
               @Html.RadioButtonFor(model => model.roomsEdit.RoomType, "S") 
                 @Html.ValidationMessageFor(model => model.roomsEdit.RoomType)
            }
                        
             @if (Model.roomsEdit.RoomType == "S") {
                <span>Lecture</span>
               @Html.RadioButtonFor(model => model.roomsEdit.RoomType, "L") 
            
                <span>Seminar</span>
               @Html.RadioButtonFor(model => model.roomsEdit.RoomType, "S", new { @checked = "checked" }) 
                 @Html.ValidationMessageFor(model => model.roomsEdit.RoomType)
                  @Html.ValidationMessageFor(model => model.roomsEdit.RoomType)
             } 
             
         
           
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.roomsEdit.SeatingType)
        </div>
        <div class="editor-fieldType">

            @if (Model.roomsEdit.SeatingType == "T")
            {
                <span>Tiered</span>
                @Html.RadioButtonFor(model => model.roomsEdit.SeatingType, "T", new { @checked = "checked" })

                <span>Flat</span>
                @Html.RadioButtonFor(model => model.roomsEdit.SeatingType, "F")
                @Html.ValidationMessageFor(model => model.roomsEdit.RoomType)
            }

            @if (Model.roomsEdit.SeatingType == "F")
            {
                <span>Tiered</span>
                @Html.RadioButtonFor(model => model.roomsEdit.SeatingType, "T")

                <span>Flat</span>
                @Html.RadioButtonFor(model => model.roomsEdit.SeatingType, "F", new { @checked = "checked" })
                @Html.ValidationMessageFor(model => model.roomsEdit.SeatingType)
            }

        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.roomsEdit.Capacity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.roomsEdit.Capacity)
            @Html.ValidationMessageFor(model => model.roomsEdit.Capacity)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.roomsEdit.BuildingCode)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.roomsEdit.BuildingCode, new SelectList(ViewBag.EditDepartments, "Value", "Text"))
            @Html.ValidationMessageFor(model => model.roomsEdit.BuildingCode)
        </div> 

       <div>
           @foreach (var item in Model.facilityEdit) {
               
           
          
          @Html.Label(item.Name)
              // model.roomFacs = item.FacilityID;
          @Html.CheckBoxFor(model => model.facilityIsChecked, new { id = item.FacilityID })
               
    
           }
        </div>
      
       
        

       
        
        @Html.HiddenFor(model => model.roomsEdit.BuildingCode)
        

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@*
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
} *@
