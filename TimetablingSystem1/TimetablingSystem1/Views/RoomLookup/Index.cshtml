@model TimetablingSystem1.Models.RoomLookupModel
@using System.Web.Optimization;
@using System.ComponentModel.DataAnnotations;



@{
    ViewBag.Title = "Index";
}




@Html.ActionLink("Add Room", "Create")
<br />
@Html.ActionLink("Add Building", "CreateBuilding")
<br />
@*
    @Html.ActionLink("Delete Building", "DeleteBuilding")
    <br />
    @Html.ActionLink("View Buildings", "ViewBuildings")
*@





@using (Html.BeginForm())
{
    <p>
        Filter by Name or Building Code: @Html.TextBox("searchString")
        <input type="submit" value="Search" />
    </p>
}

<div style=" height: 400px; width: 50%; overflow: auto;">

    <table>

        <tr>

            <td>@Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })</td>
            <td>@Html.ActionLink("Building Code", "Index", new { sortOrder = ViewBag.BCodeSortParm })</td>
            <td>@Html.ActionLink("Room Type", "Index", new { sortOrder = ViewBag.RTypeSortParm })</td>
            <td>@Html.ActionLink("Seating Type", "Index", new { sortOrder = ViewBag.STypeSortParm })</td>
        </tr>

        @foreach (var item in Model.roomsIndex)
        {
            <tr>
                @Html.HiddenFor(modelItem => item.RoomID)
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.BuildingCode)</td>
                <td>@Html.DisplayFor(modelItem => item.RoomType)</td>
                <td>@Html.DisplayFor(modelItem => item.SeatingType)</td>
                <td>@Html.ActionLink("Edit", "Edit", new { id = item.RoomID })</td>
                <td>@Html.ActionLink("Delete", "Delete", new { id = item.RoomID })</td>
                <td>@Html.ActionLink("View Details", "ViewRoom", new { id = item.RoomID })</td>




            </tr>


        }

    </table>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="editor-field">
            @Html.EditorFor(model => model.roomsCreate.Name)
            @Html.ValidationMessageFor(model => model.roomsCreate.Name)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>


    }

</div>



